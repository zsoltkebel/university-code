# Author: Zsolt Kébel
# Date: 10/02/2021

class Sensor:
    __doc__ = 'Simple Sensor Class'

    def __init__(self, ra, acc, sid, **kwargs):
        super().__init__(**kwargs)
        self._range = ra
        self._accuracy = acc
        self._sensor_id = sid

    def get_range(self):
        return self._range

    def get_id(self):
        return self._sensor_id


class InfraRedSensor(Sensor):
    __doc__ = 'Infra Red Sensor Class'

    def __init__(self, mot, ty, **kwargs):
        super().__init__(**kwargs)
        self._max_op_temp = mot
        self._type = ty

    def get_type(self):
        return self._type

    def detect_motion(self):
        # Simulating a motion detection event generated by the sensor
        return True


class UltraSonicSensor(Sensor):
    __doc__ = 'Ultra Sonic Sensor Class'

    def __init__(self, freq, **kwargs):
        super().__init__(**kwargs)
        self._operating_freq = freq

    def get_distance(self):
        # Simulating a distance measured by the sensor (in cm)
        return 75


class SmartBin:
    __doc__ = 'SmartBin Class'

    """Represent smart bin – using has-a relation to other classes - good solution"""

    def __init__(self, cap, freq, mot, ty, ra, acc, sid, **kwargs):
        super().__init__(**kwargs)

        self._capacity = cap
        self._fill_level = 0

        self._infra_red_sensor = InfraRedSensor(mot, ty, ra=ra, acc=acc, sid=sid)
        self._ultra_sonic_sensor = UltraSonicSensor(freq, ra=ra, acc=acc, sid=sid)

    def get_capacity(self):
        return self._capacity

    def get_fill_level(self):
        return self._fill_level

    def update_fill_level(self):
        """ Computes the amount of available space in the bin."""
        # We assume here that an empty bin will have 100cm of free space
        # between the bin lid and the bottom when empty.
        self._fill_level = (100 - self._ultra_sonic_sensor.get_distance()) / 100


bin = SmartBin(cap=500,
               mot=30, ty="Passive", ra=300, acc=1.0, sid="abc1234",
               freq=400.2)
print(bin.get_capacity())
print(bin._fill_level)
bin.update_fill_level()
print(bin._fill_level)